/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PRODUCT_PB_H_INCLUDED
#define PB_PRODUCT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Product { 
    char name[41]; 
    int32_t price; 
} Product;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Product_init_default                     {"", 0}
#define Product_init_zero                        {"", 0}

/* Field tags (for use in manual encoding/decoding) */
#define Product_name_tag                         1
#define Product_price_tag                        2

/* Struct field encoding specification for nanopb */
#define Product_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, INT32,    price,             2)
#define Product_CALLBACK NULL
#define Product_DEFAULT NULL

extern const pb_msgdesc_t Product_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Product_fields &Product_msg

/* Maximum encoded size of messages (where known) */
#define Product_size                             53

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
