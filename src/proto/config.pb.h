/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_SRC_PROTO_CONFIG_PB_H_INCLUDED
#define PB_SRC_PROTO_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ConfigMessage {
    char name[17];
    bool has_product1;
    char product1[17];
    bool has_price1;
    int32_t price1;
    bool has_product2;
    char product2[17];
    bool has_price2;
    int32_t price2;
    bool has_product3;
    char product3[17];
    bool has_price3;
    int32_t price3;
    bool has_product4;
    char product4[17];
    bool has_price4;
    int32_t price4;
    bool has_product5;
    char product5[17];
    bool has_price5;
    int32_t price5;
    bool has_product6;
    char product6[17];
    bool has_price6;
    int32_t price6;
    bool has_product7;
    char product7[17];
    bool has_price7;
    int32_t price7;
    bool has_product8;
    char product8[17];
    bool has_price8;
    int32_t price8;
    bool has_product9;
    char product9[17];
    bool has_price9;
    int32_t price9;
    int32_t checksum;
} ConfigMessage;


/* Initializer values for message structs */
#define ConfigMessage_init_default               {"", false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, 0}
#define ConfigMessage_init_zero                  {"", false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, false, "", false, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ConfigMessage_name_tag                   1
#define ConfigMessage_product1_tag               2
#define ConfigMessage_price1_tag                 3
#define ConfigMessage_product2_tag               4
#define ConfigMessage_price2_tag                 5
#define ConfigMessage_product3_tag               6
#define ConfigMessage_price3_tag                 7
#define ConfigMessage_product4_tag               8
#define ConfigMessage_price4_tag                 9
#define ConfigMessage_product5_tag               10
#define ConfigMessage_price5_tag                 11
#define ConfigMessage_product6_tag               12
#define ConfigMessage_price6_tag                 13
#define ConfigMessage_product7_tag               14
#define ConfigMessage_price7_tag                 15
#define ConfigMessage_product8_tag               16
#define ConfigMessage_price8_tag                 17
#define ConfigMessage_product9_tag               18
#define ConfigMessage_price9_tag                 19
#define ConfigMessage_checksum_tag               20

/* Struct field encoding specification for nanopb */
#define ConfigMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   name,              1) \
X(a, STATIC,   OPTIONAL, STRING,   product1,          2) \
X(a, STATIC,   OPTIONAL, INT32,    price1,            3) \
X(a, STATIC,   OPTIONAL, STRING,   product2,          4) \
X(a, STATIC,   OPTIONAL, INT32,    price2,            5) \
X(a, STATIC,   OPTIONAL, STRING,   product3,          6) \
X(a, STATIC,   OPTIONAL, INT32,    price3,            7) \
X(a, STATIC,   OPTIONAL, STRING,   product4,          8) \
X(a, STATIC,   OPTIONAL, INT32,    price4,            9) \
X(a, STATIC,   OPTIONAL, STRING,   product5,         10) \
X(a, STATIC,   OPTIONAL, INT32,    price5,           11) \
X(a, STATIC,   OPTIONAL, STRING,   product6,         12) \
X(a, STATIC,   OPTIONAL, INT32,    price6,           13) \
X(a, STATIC,   OPTIONAL, STRING,   product7,         14) \
X(a, STATIC,   OPTIONAL, INT32,    price7,           15) \
X(a, STATIC,   OPTIONAL, STRING,   product8,         16) \
X(a, STATIC,   OPTIONAL, INT32,    price8,           17) \
X(a, STATIC,   OPTIONAL, STRING,   product9,         18) \
X(a, STATIC,   OPTIONAL, INT32,    price9,           19) \
X(a, STATIC,   REQUIRED, INT32,    checksum,         20)
#define ConfigMessage_CALLBACK NULL
#define ConfigMessage_DEFAULT NULL

extern const pb_msgdesc_t ConfigMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ConfigMessage_fields &ConfigMessage_msg

/* Maximum encoded size of messages (where known) */
#define ConfigMessage_size                       295

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
