/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_LOGMESSAGE_PB_H_INCLUDED
#define PB_LOGMESSAGE_PB_H_INCLUDED
#include <pb.h>
#include "product.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _LogMessage_CardTransaction_TransactionType { 
    LogMessage_CardTransaction_TransactionType_TOP_UP = 0, 
    LogMessage_CardTransaction_TransactionType_CHARGE = 1, 
    LogMessage_CardTransaction_TransactionType_CASHOUT = 2 
} LogMessage_CardTransaction_TransactionType;

typedef enum _LogMessage_Order_PaymentMethod { 
    LogMessage_Order_PaymentMethod_CASH = 0, 
    LogMessage_Order_PaymentMethod_BON = 1, 
    LogMessage_Order_PaymentMethod_SUM_UP = 2, 
    LogMessage_Order_PaymentMethod_VOUCHER = 3, 
    LogMessage_Order_PaymentMethod_FREE_CREW = 4, 
    LogMessage_Order_PaymentMethod_FREE_BAND = 5, 
    LogMessage_Order_PaymentMethod_KULT_CARD = 6 
} LogMessage_Order_PaymentMethod;

/* Struct definitions */
typedef struct _LogMessage_CardTransaction { 
    LogMessage_CardTransaction_TransactionType transaction_type; 
    int32_t balance_before; 
    int32_t balance_after; 
    int32_t deposit_before; 
    int32_t deposit_after; 
    char card_id[15]; 
    pb_size_t which__counter;
    union {
        int32_t counter;
    } _counter; 
} LogMessage_CardTransaction;

typedef struct _LogMessage_Order_CartItem { 
    int32_t amount; 
    bool has_product;
    Product product; 
} LogMessage_Order_CartItem;

typedef struct _LogMessage_Order { 
    LogMessage_Order_PaymentMethod payment_method; 
    pb_size_t cart_items_count;
    LogMessage_Order_CartItem cart_items[9]; 
    pb_size_t which__list_id;
    union {
        int32_t list_id;
    } _list_id; 
} LogMessage_Order;

typedef struct _LogMessage { 
    char device_id[9]; 
    char client_id[9]; 
    int32_t device_time; 
    bool device_time_is_utc; 
    pb_size_t which__order;
    union {
        LogMessage_Order order;
    } _order; 
    pb_size_t which__card_transaction;
    union {
        LogMessage_CardTransaction card_transaction;
    } _card_transaction; 
} LogMessage;


/* Helper constants for enums */
#define _LogMessage_CardTransaction_TransactionType_MIN LogMessage_CardTransaction_TransactionType_TOP_UP
#define _LogMessage_CardTransaction_TransactionType_MAX LogMessage_CardTransaction_TransactionType_CASHOUT
#define _LogMessage_CardTransaction_TransactionType_ARRAYSIZE ((LogMessage_CardTransaction_TransactionType)(LogMessage_CardTransaction_TransactionType_CASHOUT+1))

#define _LogMessage_Order_PaymentMethod_MIN LogMessage_Order_PaymentMethod_CASH
#define _LogMessage_Order_PaymentMethod_MAX LogMessage_Order_PaymentMethod_KULT_CARD
#define _LogMessage_Order_PaymentMethod_ARRAYSIZE ((LogMessage_Order_PaymentMethod)(LogMessage_Order_PaymentMethod_KULT_CARD+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define LogMessage_init_default                  {"", "", 0, 0, 0, {LogMessage_Order_init_default}, 0, {LogMessage_CardTransaction_init_default}}
#define LogMessage_CardTransaction_init_default  {_LogMessage_CardTransaction_TransactionType_MIN, 0, 0, 0, 0, "", 0, {0}}
#define LogMessage_Order_init_default            {_LogMessage_Order_PaymentMethod_MIN, 0, {LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default, LogMessage_Order_CartItem_init_default}, 0, {0}}
#define LogMessage_Order_CartItem_init_default   {0, false, Product_init_default}
#define LogMessage_init_zero                     {"", "", 0, 0, 0, {LogMessage_Order_init_zero}, 0, {LogMessage_CardTransaction_init_zero}}
#define LogMessage_CardTransaction_init_zero     {_LogMessage_CardTransaction_TransactionType_MIN, 0, 0, 0, 0, "", 0, {0}}
#define LogMessage_Order_init_zero               {_LogMessage_Order_PaymentMethod_MIN, 0, {LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero, LogMessage_Order_CartItem_init_zero}, 0, {0}}
#define LogMessage_Order_CartItem_init_zero      {0, false, Product_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define LogMessage_CardTransaction_transaction_type_tag 1
#define LogMessage_CardTransaction_balance_before_tag 2
#define LogMessage_CardTransaction_balance_after_tag 3
#define LogMessage_CardTransaction_deposit_before_tag 4
#define LogMessage_CardTransaction_deposit_after_tag 5
#define LogMessage_CardTransaction_card_id_tag   6
#define LogMessage_CardTransaction_counter_tag   7
#define LogMessage_Order_CartItem_amount_tag     1
#define LogMessage_Order_CartItem_product_tag    2
#define LogMessage_Order_payment_method_tag      1
#define LogMessage_Order_cart_items_tag          2
#define LogMessage_Order_list_id_tag             3
#define LogMessage_device_id_tag                 1
#define LogMessage_client_id_tag                 2
#define LogMessage_device_time_tag               3
#define LogMessage_device_time_is_utc_tag        4
#define LogMessage_order_tag                     5
#define LogMessage_card_transaction_tag          6

/* Struct field encoding specification for nanopb */
#define LogMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   device_id,         1) \
X(a, STATIC,   SINGULAR, STRING,   client_id,         2) \
X(a, STATIC,   SINGULAR, INT32,    device_time,       3) \
X(a, STATIC,   SINGULAR, BOOL,     device_time_is_utc,   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (_order,order,_order.order),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (_card_transaction,card_transaction,_card_transaction.card_transaction),   6)
#define LogMessage_CALLBACK NULL
#define LogMessage_DEFAULT NULL
#define LogMessage__order_order_MSGTYPE LogMessage_Order
#define LogMessage__card_transaction_card_transaction_MSGTYPE LogMessage_CardTransaction

#define LogMessage_CardTransaction_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    transaction_type,   1) \
X(a, STATIC,   SINGULAR, INT32,    balance_before,    2) \
X(a, STATIC,   SINGULAR, INT32,    balance_after,     3) \
X(a, STATIC,   SINGULAR, INT32,    deposit_before,    4) \
X(a, STATIC,   SINGULAR, INT32,    deposit_after,     5) \
X(a, STATIC,   SINGULAR, STRING,   card_id,           6) \
X(a, STATIC,   ONEOF,    INT32,    (_counter,counter,_counter.counter),   7)
#define LogMessage_CardTransaction_CALLBACK NULL
#define LogMessage_CardTransaction_DEFAULT NULL

#define LogMessage_Order_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    payment_method,    1) \
X(a, STATIC,   REPEATED, MESSAGE,  cart_items,        2) \
X(a, STATIC,   ONEOF,    INT32,    (_list_id,list_id,_list_id.list_id),   3)
#define LogMessage_Order_CALLBACK NULL
#define LogMessage_Order_DEFAULT NULL
#define LogMessage_Order_cart_items_MSGTYPE LogMessage_Order_CartItem

#define LogMessage_Order_CartItem_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    amount,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  product,           2)
#define LogMessage_Order_CartItem_CALLBACK NULL
#define LogMessage_Order_CartItem_DEFAULT NULL
#define LogMessage_Order_CartItem_product_MSGTYPE Product

extern const pb_msgdesc_t LogMessage_msg;
extern const pb_msgdesc_t LogMessage_CardTransaction_msg;
extern const pb_msgdesc_t LogMessage_Order_msg;
extern const pb_msgdesc_t LogMessage_Order_CartItem_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define LogMessage_fields &LogMessage_msg
#define LogMessage_CardTransaction_fields &LogMessage_CardTransaction_msg
#define LogMessage_Order_fields &LogMessage_Order_msg
#define LogMessage_Order_CartItem_fields &LogMessage_Order_CartItem_msg

/* Maximum encoded size of messages (where known) */
#if defined(Product_size)
#define LogMessage_Order_CartItem_size           (17 + Product_size)
#define LogMessage_Order_size                    (220 + 9*Product_size)
#define LogMessage_size                          (334 + 9*Product_size)
#endif
#define LogMessage_CardTransaction_size          73

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
